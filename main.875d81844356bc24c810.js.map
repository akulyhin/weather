{"version":3,"sources":["webpack:///./js/apiService.js","webpack:///./index.js"],"names":["query","apiKey","geoLocation","navigator","geolocation","getCurrentPosition","location","console","log","latitude","coords","longitude","fetchWeather","url","fetch","response","json","weatherBox","document","querySelector","apiService","then","data","temp","Math","round","roundTemp","main","innerHTML","name","weather","description","icon","render"],"mappings":"iSAAe,OACXA,MAAO,OACPC,OAAQ,mCAGRC,YALW,WAcTC,UAAUC,YAAYC,oBARA,SAAAC,GACpBC,QAAQC,IAAIF,GACZ,IAAIG,EAAWH,EAASI,OAAOD,SACfH,EAASI,OAAOC,UAGhC,OAFAJ,QAAQC,IAAIC,GAELA,MAMLG,aAlBK,WAkBU,I,EAAA,c,EAAA,qIACbC,EADa,qDAC8C,EAAKb,MADnD,+BACuF,EAAKC,OAD5F,SAEMa,MAAMD,GAFZ,cAEXE,EAFW,yBAIVA,EAASC,QAJC,0C,mLCdnBC,EAAaC,SAASC,cAAc,gBAE1CC,EAAWR,eACVS,MAAK,SAAAC,GAASf,QAAQC,IAAIc,GAM3B,SAAiBA,GACd,IAAMC,EAOT,SAAoBA,GAChB,OAAOC,KAAKC,OAAOF,GARPG,CAAUJ,EAAKK,KAAKJ,MAChCN,EAAWW,UAAX,OAA8BN,EAAKO,KAAnC,8BACkBN,EADlB,iBAEKD,EAAKQ,QAAQ,GAAGC,YAFrB,2DAGgDT,EAAKQ,QAAQ,GAAGE,KAHhE,sCAPAC,CAAOX,MAGXf,QAAQC,IAAIY,EAAWlB,gB","file":"main.875d81844356bc24c810.js","sourcesContent":["export default {\r\n    query: 'Киев',\r\n    apiKey: 'ff8084d11c7279450a985d59a31a6700',\r\n\r\n    \r\n    geoLocation() {\r\n      const onGetPosition = location => {\r\n        console.log(location)\r\n        let latitude = location.coords.latitude;\r\n        let longitude = location.coords.longitude;\r\n        console.log(latitude);\r\n        \r\n        return latitude;\r\n      }\r\n      navigator.geolocation.getCurrentPosition(onGetPosition)\r\n    },\r\n\r\n\r\n    async fetchWeather() {\r\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${this.query}&units=metric&lang=ru&appid=${this.apiKey}`;\r\n        const response = await fetch(url);\r\n        \r\n        return response.json();\r\n      }\r\n}","import './sass/styles.scss';\r\nimport apiService from './js/apiService';\r\n\r\n\r\nconst weatherBox = document.querySelector('.weather-box');\r\n\r\napiService.fetchWeather()\r\n.then(data => {console.log(data),\r\n    render(data)\r\n})\r\n\r\nconsole.log(apiService.geoLocation());\r\n\r\nfunction render (data) {\r\n   const temp = roundTemp(data.main.temp);\r\n    weatherBox.innerHTML = `<h2>${data.name}</h2>\r\n    <p>Температура: ${temp}°</p>\r\n    <p>${data.weather[0].description}</p>\r\n    <p><img src=\"https://openweathermap.org/img/w/${data.weather[0].icon}.png\" width=\"100\" height=\"100\"></p>`\r\n}\r\n\r\nfunction roundTemp (temp) {\r\n    return Math.round(+temp);\r\n}\r\n"],"sourceRoot":""}